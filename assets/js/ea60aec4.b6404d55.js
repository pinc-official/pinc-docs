"use strict";(self.webpackChunkpinc_docs=self.webpackChunkpinc_docs||[]).push([[716],{5689:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>o});var l=i(4848),r=i(8453);const s={id:"primitive-types",title:"Primitive Types",sidebar_position:2},t="Primitive Types",a={id:"Language Features/primitive-types",title:"Primitive Types",description:"String",source:"@site/docs/Language Features/primitive-types.md",sourceDirName:"Language Features",slug:"/Language Features/primitive-types",permalink:"/pinc-docs/Language Features/primitive-types",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"primitive-types",title:"Primitive Types",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Let Bindings",permalink:"/pinc-docs/Language Features/let-bindings"},next:{title:"Tags",permalink:"/pinc-docs/Language Features/tags"}},c={},o=[{value:"String",id:"string",level:2},{value:"Char",id:"char",level:2},{value:"Boolean",id:"boolean",level:2},{value:"Int",id:"int",level:2},{value:"Float",id:"float",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"primitive-types",children:"Primitive Types"}),"\n",(0,l.jsx)(n.h2,{id:"string",children:"String"}),"\n",(0,l.jsxs)(n.p,{children:["In pinc strings are always written with double quotes (single quotes are reserved for the ",(0,l.jsx)(n.code,{children:"char"})," type)."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-pi",children:'let greeting = "Hello world!"\nlet multilineGreeting = "Hello\n world!"\n'})}),"\n",(0,l.jsxs)(n.p,{children:["To concatenate strings, use ",(0,l.jsx)(n.code,{children:"++"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-pi",children:'let greetings = "Hello " ++ "world!";\n'})}),"\n",(0,l.jsxs)(n.p,{children:["String templates are written with double quotes just like normal strings. Their placeholder values are written inside\n",(0,l.jsx)(n.code,{children:"$()"})," and may only contain variables."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-pi",children:'let name = "Joe";\nlet greeting = "Hello $(name)";\n'})}),"\n",(0,l.jsxs)(n.admonition,{type:"info",children:[(0,l.jsx)(n.p,{children:"String templates may only accept variables as their placeholders. Advanced expressions (like an if condition) are\ncurrently not allowed."}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The following code would lead to an error:"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-pi",children:'let greeting = "Hello $(if (name) name else "World")";\n'})}),(0,l.jsx)(n.p,{children:"... but it can always be written with a let binding:"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-pi",children:'let subject = if (name) name else "World";\nlet greeting = "Hello $(subject)";\n'})})]}),"\n",(0,l.jsx)(n.h2,{id:"char",children:"Char"}),"\n",(0,l.jsx)(n.p,{children:"pinc has a type for a string with a single letter:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"let firstLetterOfAlphabet = 'a';\n"})}),"\n",(0,l.jsxs)(n.p,{children:["To convert a string to a char, use ",(0,l.jsx)(n.code,{children:'"a"[0]'}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["To convert a char to a string, use ",(0,l.jsx)(n.code,{children:"\"\" ++ 'a'"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"boolean",children:"Boolean"}),"\n",(0,l.jsxs)(n.p,{children:["A pinc boolean can be either ",(0,l.jsx)(n.code,{children:"true"})," or ",(0,l.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-pi",children:"let yes = true;\nlet no = false;\n"})}),"\n",(0,l.jsx)(n.p,{children:"All common operations are available:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["logical and ",(0,l.jsx)(n.code,{children:"&&"})]}),"\n",(0,l.jsxs)(n.li,{children:["logical or ",(0,l.jsx)(n.code,{children:"||"})]}),"\n",(0,l.jsxs)(n.li,{children:["logical not ",(0,l.jsx)(n.code,{children:"!"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"<="}),", ",(0,l.jsx)(n.code,{children:">="}),", ",(0,l.jsx)(n.code,{children:"<"}),", ",(0,l.jsx)(n.code,{children:">"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"=="}),": structural equal, compares data structures deeply"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"!="}),": structural unequal"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"int",children:"Int"}),"\n",(0,l.jsx)(n.p,{children:"Integers are numbers without a decimal point."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-pi",children:"let number = 5;\nlet largeNumber = 1_000_000;\n\nlet result = number + largeNumber; // 1_000_005\n"})}),"\n",(0,l.jsx)(n.p,{children:"We provide the usual operations on them:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["addition: ",(0,l.jsx)(n.code,{children:"+"})]}),"\n",(0,l.jsxs)(n.li,{children:["substraction: ",(0,l.jsx)(n.code,{children:"-"})]}),"\n",(0,l.jsxs)(n.li,{children:["multplication: ",(0,l.jsx)(n.code,{children:"*"})]}),"\n",(0,l.jsxs)(n.li,{children:["division: ",(0,l.jsx)(n.code,{children:"/"})]}),"\n",(0,l.jsxs)(n.li,{children:["modulo: ",(0,l.jsx)(n.code,{children:"%"})]}),"\n",(0,l.jsxs)(n.li,{children:["exponentiation: ",(0,l.jsx)(n.code,{children:"**"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["To improve readability, you may place underscores in the middle of numeric literals such as ",(0,l.jsx)(n.code,{children:"1_000_000"}),". Note that\nunderscores can be placed anywhere within a number, not just every three digits."]}),"\n",(0,l.jsx)(n.h2,{id:"float",children:"Float"}),"\n",(0,l.jsx)(n.p,{children:"Floats are numbers with a decimal point. They can be written in the following ways:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-pi",children:"let f = 1_000.462;\nlet f = 1.;\nlet f = 1.4332;\nlet f = .5;\nlet f = 1e10;\nlet f = 1e+2;\nlet f = 1e-5;\nlet f = 1.e-2;\nlet f = 0.1e-1;\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var l=i(6540);const r={},s=l.createContext(r);function t(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);